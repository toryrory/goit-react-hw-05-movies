{"version":3,"file":"static/js/544.acf801c1.chunk.js","mappings":"wNAEeA,EAAQC,EAAAA,GAAAA,EAAH,iFAILC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,yEAIVG,EAAcH,EAAAA,GAAAA,IAAH,0K,SCNbI,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,UAACR,EAAD,CAAYS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAAhD,WACE,SAACL,EAAD,CACEU,IACEN,EAAK,0CACkCA,GACnC,6CAENO,IAAKR,GAAgB,4BACrBS,MAAM,MACNC,OAAO,SAET,SAACjB,EAAD,UAAQO,GAAgB,gCAI/B,E,UCpBYW,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7B,OACE,+BACE,SAAC,IAAD,UACGA,EAAOC,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,YAAad,EAApB,EAAoBA,MAAOe,EAA3B,EAA2BA,KAA3B,OACV,SAACjB,EAAD,CAEEG,MAAOa,EACPd,MAAOA,GAASe,EAChBhB,GAAIA,GAHCA,EAFG,OAWnB,C,sECjBYiB,E,QAAUtB,GAAAA,GAAH,uR,mFCkBpB,UAhBa,WACX,OAA4BuB,EAAAA,EAAAA,UAAS,MAArC,eAAOL,EAAP,KAAeM,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,iCACE,4CACCb,IAAU,SAAC,IAAD,CAAcA,OAAQA,MAGtC,C,mMCjBDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHT,EAAiB,mCAAG,oGACRQ,EAAAA,EAAAA,IAAA,mCAAsCC,IAD9B,cACzBC,EADyB,yBAExBA,EAASR,MAFe,2CAAH,qDAIjBS,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBG,IAFZ,cACzBF,EADyB,yBAIxBA,EAASR,KAAKC,SAJU,2CAAH,sDAMjBU,EAAY,mCAAG,WAAMlC,GAAN,uFACH6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,oBAAiC8B,IAD9B,cACpBC,EADoB,yBAEnBA,EAASR,MAFU,2CAAH,sDAIZY,EAAe,mCAAG,WAAMnC,GAAN,uFACN6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,4BAAyC8B,IADnC,cACvBC,EADuB,yBAEtBA,EAASR,KAAKa,MAFQ,2CAAH,sDAIfC,EAAe,mCAAG,WAAMrC,GAAN,uFACN6B,EAAAA,EAAAA,IAAA,gBACZ7B,EADY,4BACU8B,EADV,YADM,cACvBC,EADuB,yBAItBA,EAASR,KAAKC,SAJQ,2CAAH,qD","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieGallery/MovieGallery.jsx","components/MovieGallery/MovieGallery.styled.jsx","pages/Home/Home.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n  export const Title = styled.p`\n    text-transform: uppercase;\n    font-weight: 500;\n  `\n  export const StyledLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n  `\n  export const MoviePoster = styled.img`\n    :hover {\n      box-shadow: 0px 0px 22px 0px rgba(0, 0, 0, 0.75);\n      transform: scale(1.05);\n      transition-duration: 500ms;\n    }\n  `;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Title, StyledLink, MoviePoster } from './MovieItem.styled';\n\nexport const MovieItem = ({ id, title, image }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <MoviePoster\n          src={\n            image\n              ? `https://image.tmdb.org/t/p/w500/${image}`\n              : 'https://screench.com/upload/no-poster.jpeg'\n          }\n          alt={title ? title : 'Movie title not available'}\n          width=\"300\"\n          height=\"450\"\n        />\n        <Title>{title ? title : 'Movie title unavailable'}</Title>\n      </StyledLink>\n    </li>\n  );\n};\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { Gallery } from './MovieGallery.styled';\n\nexport const MovieGallery = ({ movies }) => {\n  return (\n    <>\n      <Gallery>\n        {movies.map(({ id, poster_path, title, name }) => (\n          <MovieItem\n            key={id}\n            image={poster_path}\n            title={title || name}\n            id={id}\n          />\n        ))}\n      </Gallery>\n    </>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { getTrendingMovies } from 'services/fetchMovie';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending movies</h1>\n      {movies && <MovieGallery movies={movies} />}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchedMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieData = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Title","styled","StyledLink","Link","MoviePoster","MovieItem","id","title","image","location","useLocation","to","state","from","src","alt","width","height","MovieGallery","movies","map","poster_path","name","Gallery","useState","setMovies","useEffect","getTrendingMovies","then","data","results","catch","error","console","log","axios","API_KEY","response","getSearchedMovies","query","getMovieData","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}