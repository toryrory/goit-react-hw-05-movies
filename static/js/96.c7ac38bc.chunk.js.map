{"version":3,"file":"static/js/96.c7ac38bc.chunk.js","mappings":"qLAEaA,E,QAAUC,GAAAA,GAAH,uR,qICAPC,E,QAAOD,GAAAA,EAAH,qE,SCqCjB,EAjCkB,WAChB,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAjB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,IAECF,EAGL,OACE,SAAC,IAAD,UACGA,EAAUY,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OAC1B,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,iIAENI,IAAG,UAAKH,GACRI,MAAM,MACNC,OAAO,SAET,SAACvB,EAAD,UAAOmB,KACP,uCAAeD,OAZRF,EADiB,KAkBjC,C,mMCpCDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD9B,cACzBE,EADyB,yBAExBA,EAASlB,MAFe,2CAAH,qDAIjBmB,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBI,IAFZ,cACzBF,EADyB,yBAIxBA,EAASlB,KAAKqB,SAJU,2CAAH,sDAMjBC,EAAY,mCAAG,WAAMf,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,oBAAiCS,IAD9B,cACpBE,EADoB,yBAEnBA,EAASlB,MAFU,2CAAH,sDAIZF,EAAe,mCAAG,WAAMS,GAAN,uFACNQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,4BAAyCS,IADnC,cACvBE,EADuB,yBAEtBA,EAASlB,KAAKuB,MAFQ,2CAAH,sDAIfC,EAAe,mCAAG,WAAMjB,GAAN,uFACNQ,EAAAA,EAAAA,IAAA,gBACZR,EADY,4BACUS,EADV,YADM,cACvBE,EADuB,yBAItBA,EAASlB,KAAKqB,SAJQ,2CAAH,qD","sources":["components/MovieGallery/MovieGallery.styled.jsx","pages/MovieCast/MovieCast.styled.jsx","pages/MovieCast/MovieCast.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n    font-size: 20px;\n    font-weight: 500;\n`\n\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'services/fetchMovie';\nimport { Gallery } from 'components/MovieGallery/MovieGallery.styled';\nimport { Text } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(data => setMovieCast(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n  return (\n    <Gallery>\n      {movieCast.slice(0, 15).map(({ id, profile_path, character, name }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                : 'https://png.pngtree.com/element_our/20190531/ourmid/pngtree-anime-thick-film-movie-shooting-illustration-png-image_1302654.jpg'\n            }\n            alt={`${character}`}\n            width=\"300\"\n            height=\"450\"\n          />\n          <Text>{name}</Text>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </Gallery>\n  );\n};\nexport default MovieCast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchedMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieData = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Gallery","styled","Text","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCredits","then","data","catch","error","console","log","slice","map","id","profile_path","character","name","src","alt","width","height","axios","API_KEY","getTrendingMovies","response","getSearchedMovies","query","results","getMovieData","cast","getMovieReviews"],"sourceRoot":""}