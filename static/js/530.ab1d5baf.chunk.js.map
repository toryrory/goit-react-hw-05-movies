{"version":3,"file":"static/js/530.ab1d5baf.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDetailsInfo/MovieDetailsInfo.styled.jsx","components/MovieDetailsInfo/MovieDetailsInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n      display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-top: 10px;\n  padding-left: 25px;\n\n  :hover {\n    color: #8b2d84;\n  }\n`","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ path, children }) => {\n  return (\n    <StyledLink to={path}>\n      <HiArrowLeft />\n      {children}\n    </StyledLink>\n  );\n};\nBackLink.propTypes = {\n  path: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 25px;\n  margin-top: 10px;\n  gap: 30px;\n`;\nexport const Title = styled.h1`\n    font-size: 40px;\n`;\nexport const Span = styled.span`\n    font-weight: 700;\n    font-size: 20px;\n`\nexport const Text = styled.p`\n    font-weight: 400;\n    font-size: 20px;\n`\nexport const VoteAvarage = styled.span`\n  font-weight: 400;\n  font-size: 20px;\n  border-radius: 25%;\n  background-color: #8b2d84;\n  color: white;\n  padding: 5px;\n`;\nexport const List = styled.ul`\nmargin-top: 50px;\n  display: flex;\n  gap: 40px;\n  justify-content: center;\n  list-style: none;\n  font-size: 20px;\n  cursor: pointer;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: #8b2d84;\n    transition: 200ms;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Container,\n  Title,\n  Span,\n  Text,\n  VoteAvarage,\n  List,\n  StyledLink,\n} from './MovieDetailsInfo.styled';\n\nexport const MovieDetailsInfo = ({ movieInfo }) => {\n  const {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    genres,\n    overview,\n    vote_count,\n  } = movieInfo;\n  return (\n    <>\n      <Container>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://screench.com/upload/no-poster.jpeg'\n          }\n          alt={`${title}`}\n          height=\"500\"\n        />\n        <div>\n          <Title>\n            {title} ({release_date.slice(0, 4)})\n          </Title>\n          <Text>\n            <Span>Votes: </Span>\n            <VoteAvarage>{vote_average.toFixed(1)}</VoteAvarage> / {vote_count}{' '}\n            voted\n          </Text>\n          <Text>\n            {' '}\n            <Span>Genres:</Span> {genres.map(({ name }) => name).join(', ')}\n          </Text>\n          <Text>{overview}</Text>\n          <List>\n            <li>\n              <StyledLink to=\"cast\">ðŸ•º Cast information</StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\">ðŸŽ­ Review information</StyledLink>\n            </li>\n          </List>\n        </div>\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nMovieDetailsInfo.propTypes = {\n  movieInfo: PropTypes.object.isRequired,\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieData } from 'services/fetchMovie';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieDetailsInfo } from 'components/MovieDetailsInfo/MovieDetailsInfo';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    getMovieData(movieId)\n      .then(data => setMovieData(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n  if (!movieData) {\n    return;\n  }\n\n  return (\n    <main>\n      <BackLink path={backLinkHref.current}>Back to movies</BackLink>\n      <MovieDetailsInfo movieInfo={movieData} />\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchedMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieData = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["StyledLink","styled","Link","BackLink","path","children","to","Container","Title","Span","Text","VoteAvarage","List","MovieDetailsInfo","movieInfo","title","poster_path","release_date","vote_average","genres","overview","vote_count","src","alt","height","slice","toFixed","map","name","join","useState","movieData","setMovieData","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieData","then","data","catch","error","console","log","current","axios","API_KEY","getTrendingMovies","response","getSearchedMovies","query","results","id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}